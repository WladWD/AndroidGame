#include "ShaderBase.h"

#pragma once
namespace Shader
{
	class ShaderCollectBase : public ShaderBase
	{
	protected:
		////////////////////////////////////////////////////////////////////////////////////////////////
		virtual void InitVariable(GLuint program) = 0;
		////////////////////////////////////////////////////////////////////////////////////////////////
	public:
		ShaderCollectBase(uint32_t program_count);
		virtual ~ShaderCollectBase();
		////////////////////////////////////////////////////////////////////////////////////////////////
		virtual GLint GetProgram(void) = 0;
		////////////////////////////////////////////////////////////////////////////////////////////////
		virtual GLint GetPositionAttrib(void) = 0;
		virtual GLint GetTexCoordAttrib(void) = 0;
		////////////////////////////////////////////////////////////////////////////////////////////////
		virtual void SetTexture(void) = 0;
		////////////////////////////////////////////////////////////////////////////////////////////////
		virtual void SetFog(glm::vec2 fog) = 0;
		virtual void SetFogColor(const float *color) = 0;
		////////////////////////////////////////////////////////////////////////////////////////////////
		virtual void SetProjViewMatrix(glm::mat4 matrix) = 0;
		virtual void SetWorldMatrix(glm::mat4 matrix) = 0;
		////////////////////////////////////////////////////////////////////////////////////////////////
		virtual void BindTextureToSlot(void) = 0;
	};
}
