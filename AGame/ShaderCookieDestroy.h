#include "ShaderCookieDestroyBase.h"

#pragma once
namespace Shader
{
#define DPROGRAM_COUNT 1
	class ShaderCookieDestroy : public ShaderCookieDestroyBase
	{
		////////////////////////////////////////////////////////////////////////////////////////////////
		GLint mProjView[DPROGRAM_COUNT];
		GLint mWorld[DPROGRAM_COUNT];
		////////////////////////////////////////////////////////////////////////////////////////////////
		GLint mMoving[DPROGRAM_COUNT];
		GLint mGlobalData[DPROGRAM_COUNT];
		GLint mDrawIndex[DPROGRAM_COUNT];
		////////////////////////////////////////////////////////////////////////////////////////////////
		GLint mTexture[DPROGRAM_COUNT];
		////////////////////////////////////////////////////////////////////////////////////////////////
		uint32_t mPipeTexSlot;
		////////////////////////////////////////////////////////////////////////////////////////////////
		void InitVariable(GLuint program);
		////////////////////////////////////////////////////////////////////////////////////////////////
	public:
		ShaderCookieDestroy(Resource::ResourceBase *resourceLoad);
		~ShaderCookieDestroy();
		////////////////////////////////////////////////////////////////////////////////////////////////
		GLint GetProgram(void);
		////////////////////////////////////////////////////////////////////////////////////////////////
		GLint GetPositionAttrib(void);
		//GLint GetNormalAttrib(void);
		GLint GetTexCoordAttrib(void);
		////////////////////////////////////////////////////////////////////////////////////////////////
		void SetMovePices(glm::vec4 mVector[COOKIE_PICES_COUNT], uint32_t count);
		void SetGlobalData(glm::vec2 mData);
		void SetDrawPiceID(int32_t mID);
		////////////////////////////////////////////////////////////////////////////////////////////////
		void SetPipeTexture(void);
		////////////////////////////////////////////////////////////////////////////////////////////////
		void SetProjViewMatrix(glm::mat4 matrix);
		void SetWorldMatrix(glm::mat4 matrix);
		////////////////////////////////////////////////////////////////////////////////////////////////
		void BindTextureToSlot(void);
	};
#undef DPROGRAM_COUNT
}
