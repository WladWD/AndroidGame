#include "ShaderBase.h"

#pragma once
namespace Shader
{
#define DPROGRAM_COUNT 1
	class ShaderDrawText : public ShaderBase
	{
		////////////////////////////////////////////////////////////////////////////////////////////////
		GLint mWorld[DPROGRAM_COUNT];
		////////////////////////////////////////////////////////////////////////////////////////////////
		GLint mDiffuse[DPROGRAM_COUNT];
		////////////////////////////////////////////////////////////////////////////////////////////////
		GLint mPackOffsetScaleTex[DPROGRAM_COUNT];
		////////////////////////////////////////////////////////////////////////////////////////////////
		uint32_t mTexSlot;
		////////////////////////////////////////////////////////////////////////////////////////////////
		void InitVariable(GLuint program);
		////////////////////////////////////////////////////////////////////////////////////////////////
	public:
		ShaderDrawText(Resource::ResourceBase *resourceLoad);
		~ShaderDrawText();
		////////////////////////////////////////////////////////////////////////////////////////////////
		GLint GetProgram(void);
		////////////////////////////////////////////////////////////////////////////////////////////////
		GLint GetPositionAttrib(void);
		////////////////////////////////////////////////////////////////////////////////////////////////
		void SetTexture(void);
		////////////////////////////////////////////////////////////////////////////////////////////////
		void SetWorldMatrix(glm::mat4 matrix);
		////////////////////////////////////////////////////////////////////////////////////////////////
		void SetPackOffsetScale(glm::vec4 mPack);
		////////////////////////////////////////////////////////////////////////////////////////////////
		void BindTextureToSlot(void);
		////////////////////////////////////////////////////////////////////////////////////////////////
	};
#undef DPROGRAM_COUNT
}

