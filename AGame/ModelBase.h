#include "MHeder.h"
#include "ModelObject.h"
#include "ImageResource.h"

#pragma once
namespace Collision
{
	class ModelBase
	{
	protected:
		//////////////////////////////////////////////////////////////////////////////////////
		Resource::ImageResource *mImages;
		//////////////////////////////////////////////////////////////////////////////////////
		Resource::ModelObject *mObjects;
		GLuint mDrawObjectCount;
		//////////////////////////////////////////////////////////////////////////////////////
		GLuint mElementArray;
		GLuint mVertexBuffer;
		//////////////////////////////////////////////////////////////////////////////////////
		GLenum mIndexFormat;
		//////////////////////////////////////////////////////////////////////////////////////
	public:
		ModelBase(Resource::ModelObject *mObjects, GLuint mDrawObjectCount, GLuint mElementArray, GLuint mVertexBuffer, GLenum mIndexFormat, Resource::ImageResource *mImages);
		virtual ~ModelBase();
		//////////////////////////////////////////////////////////////////////////////////////
		virtual void BindBuffers(void);
		virtual void UnBindBuffers(void);
		//////////////////////////////////////////////////////////////////////////////////////
		virtual GLuint GetDrawObjectCount(void);
		//////////////////////////////////////////////////////////////////////////////////////
		virtual void Draw(uint32_t mDrawIndex);//Перед вызовом метода установить нужную текстуру через шейдер
		//////////////////////////////////////////////////////////////////////////////////////
	};
}

